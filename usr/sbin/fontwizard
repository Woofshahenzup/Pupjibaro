#!/bin/bash
#170613 i18n nilsonmorales

export TEXTDOMAIN=fontwizard
export OUTPUT_CHARSET=UTF-8 

export antialiasing=$(grep '<bool>' $HOME/.fonts.conf|head -1|cut -d '>' -f2|cut -d '<' -f1)

export hinting=$(grep '<bool>' $HOME/.fonts.conf|head -2|tail -1|cut -d '>' -f2|cut -d '<' -f1)

export autohint=$(grep '<bool>' $HOME/.fonts.conf|head -3|tail -1|cut -d '>' -f2|cut -d '<' -f1)

[ "$antialiasing" = "" ] && antialiasing=false hinting=false autohint=false
                        
save_settings()
{

case $hinting in

  true)
  
    hintstyle=hintslight
    ;;
    
  false)
   
    hintstyle=hintnone
    ;;
    
esac

  echo "<match target=\"font\">
 <edit name=\"antialias\" mode=\"assign\">
<bool>$antialiasing</bool>
</edit>
<edit name=\"hinting\" mode=\"assign\">
<bool>$hinting</bool>
</edit>
 <edit name=\"autohint\" mode=\"assign\">
<bool>$autohint</bool>
</edit>
<edit name=\"hintstyle\" mode=\"assign\">
<const>$hintstyle</const>
</edit>
</match>" > $HOME/.fonts.conf

rm /etc/fonts/local.conf
ln -s $HOME/.fonts.conf /etc/fonts/local.conf
 
 gxmessage "'$(gettext 'Font appearance settings saved. Only newly started application will be affected.')'"
}

export -f save_settings

export mainWindow='
<window title="'$(gettext 'Font Appearance')'" allow-grow="false"> 
  <vbox>
    <text><label>"'$(gettext 'Welcome to the Puppy font appearance wizard!')'"</label></text> 
    <text xalign="0"><label>"'$(gettext 'This wizard allows you to change the way fonts appear on your screen: make them either sharper or smoother.')'"</label></text>        
    <text xalign="0"><label>"'$(gettext 'For LCD it is recommend to turn everything on. For CRT screens, do the opposite.')'"</label></text>        
 
   <checkbox tooltip-text="'$(gettext 'If checked, fonts will be smoothed with antialiasing.')'">
     <label>"'$(gettext 'Antialiasing')'"</label>
     <variable>antialiasing</variable>
     <default>'$antialiasing'</default>
   </checkbox>
       
   <checkbox tooltip-text="'$(gettext ' If checked, fonts will be smoothed with hinting.')'">
      <label>"'$(gettext 'Hinting')'"</label>
      <variable>hinting</variable>
      <default>'$hinting'</default>
   </checkbox>
       
       <checkbox>
         <label>"'$(gettext 'Automatic hinting')'"</label>
         <variable>autohint</variable>
         <default>'$autohint'</default>
       </checkbox>
      
   <hbox>
     
     <button use-stock="true" label="gtk-apply">
       <action type="exit">save</action>
     </button> 

	 <button use-stock="true" label="gtk-quit">
       <action type="exit">EXIT_NOW</action>
     </button> 
    
   </hbox>                    
  </vbox>
      
</window>'

eval $(gtkdialog -p mainWindow)

[ "$EXIT" = "save" ] && save_settings
